generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL_UNPOOLED")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id              String            @id @default(cuid())
  address         String            @unique
  profile         Profile?
  auditee         Audit[]
  auditor         Audit[]           @relation("UserAuditor")
  requests        Audit[]           @relation("UserRequests")
  termsAcceptance TermsAcceptance[]
  auditeeRole     Boolean           @default(false)
  auditorRole     Boolean           @default(false)
  createdAt       DateTime          @default(now())
}

model Profile {
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String?
  image     String?
  available Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

model Audit {
  id            String            @id @default(cuid())
  auditeeId     String
  terms         Terms?
  auditee       User              @relation(fields: [auditeeId], references: [id])
  auditors      User[]            @relation("UserAuditor")
  requests      User[]            @relation("UserRequests")
  termsAccepted TermsAcceptance[]
  title         String
  description   String
  isLocked      Boolean           @default(false) // parties have agreed on terms
  isFinal       Boolean           @default(false) // audit is complete and handed off
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Terms {
  auditId   String   @unique
  audit     Audit    @relation(fields: [auditId], references: [id], onDelete: Cascade)
  markdown  String? // reference to an S3 storage key
  price     Int      @default(0)
  duration  Int      @default(6) // duration in months
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TermsAcceptance {
  id          String  @id @default(cuid())
  auditId     String
  userId      String
  audit       Audit   @relation(fields: [auditId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hasAttested Boolean @default(false) // auditor has attested to the audit terms
  hasAccepted Boolean @default(false) // auditor has accepted the audit terms

  @@unique([auditId, userId])
}
