generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL_UNPOOLED")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Users {
  id          String     @id @default(cuid())
  address     String     @unique
  auditeeRole Boolean    @default(false)
  auditorRole Boolean    @default(false)
  name        String?
  image       String?
  available   Boolean    @default(false)
  auditors    Auditors[]
  auditees    Audits[]
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
}

enum AuditStatus {
  OPEN // auditors can join + leave
  ATTESTATION // attestation period
  ONGOING // terms are locked, audit is ongoing 
  FINAL // handoff occurred, audit is complete -> push onchain.
}

model Audits {
  id          String      @id @default(cuid())
  auditeeId   String
  auditee     Users       @relation(fields: [auditeeId], references: [id])
  title       String
  description String
  markdown    String? // reference to an S3 storage key
  price       Int         @default(0)
  duration    Int         @default(6) // duration in months
  status      AuditStatus @default(OPEN)
  auditors    Auditors[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum AuditorStatus {
  VERIFIED
  REQUESTED
  REJECTED
}

model Auditors {
  auditId       String
  audit         Audits        @relation(fields: [auditId], references: [id])
  userId        String
  user          Users         @relation(fields: [userId], references: [id])
  status        AuditorStatus
  attestedTerms Boolean       @default(false)
  acceptedTerms Boolean       @default(false)

  @@unique([auditId, userId])
}
